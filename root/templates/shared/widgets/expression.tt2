[%

# IF fields.expressed_in.data || fields.expressed_during.data || fields.subcellular_localization.data;
#     '<h4>Spatio-Temporal Expression Patterns</h4>';
# END;

# IF fields.anatomic_expression_patterns.data;
#   gene_image = fields.anatomic_expression_patterns.data.image;
#   '<div style="max-width:500px;">';
#     '<a href="'_ gene_image _ '" target="_blank">' _
#        '<img src="' _ gene_image _ '" width="100%">' _
#     '</a>';
#   '</div>';
# END;


# IF fields.expr_pattern_images.data;
#     cell_content(fields.expr_pattern_images.data);
# END;


WRAPPER $field_block title="Expressed in" key="expressed_in";

    build_data_table(order=['ontology_term', 'details', 'images'],
                     columns={
                          images => 'Images',
                          ontology_term => 'Life stage',
                          details  => 'Supporting evidence',
                     },
                     key='expressed_in');

END;

WRAPPER $field_block title="Expressed during" key="expressed_during";

    build_data_table(order=['ontology_term', 'details', 'images'],
                     columns={
                          images => 'Images',
                          ontology_term => 'Life stage',
                          details  => 'Supporting evidence',
                     },
                     key='expressed_during');

END;

WRAPPER $field_block title="Subcellular localization" key="subcellular_localization";

    build_data_table(order=['ontology_term', 'details', 'images'],
                     columns={
                          images => 'Images',
                          ontology_term => 'Life stage',
                          details  => 'Supporting evidence',
                     },
                     key='subcellular_localization');

END;

# expression_pattern field can be removed once we are certain we like the expressed_in, expressed_during, subcellular_localization, and EPIC tables
WRAPPER $field_block title="Spatio-Temporal Expression Patterns" key="expression_patterns";

           build_data_table(order=['expression_pattern','type', 'description', 'database', 'expressed_in', 'life_stage', 'go_term', 'transgene'],
                      columns={
                          expression_pattern => 'Pattern',
                          description  => 'Description',
                          database => 'Database',
                          type => 'Type',
                          expressed_in => 'Expressed in',
                          life_stage => 'Life stage',
                          go_term => 'GO term',
                          transgene => 'Transgene'
                             },
                    style = '"aaSorting": [],',
                    key='expression_patterns');

END;


WRAPPER $field_block title="EPIC dataset" key="epic_expr_patterns";
           build_data_table(order=['expression_pattern','type', 'description', 'database', 'life_stage', 'expressed_in', 'go_term'],
                      columns={
                          expression_pattern => 'Pattern',
                          description  => 'Description',
                          database => 'Database',
                          type => 'Type',
                          expressed_in => 'Expressed in',
                          life_stage => 'Life stage',
                          go_term => 'GO term',
                          transgene => 'Transgene'
                             },
                    style = '"aaSorting": [],',
                    key='epic_expr_patterns');

END;

WRAPPER $field_block title="Expression Profiling Graphs" key="expression_profiling_graphs";
           build_data_table(order=['expression_pattern','type', 'description', 'database'],
                      columns={
                          expression_pattern => 'Pattern',
                          description  => 'Description',
                          database => 'Database',
                          type => 'Type',
                          expressed_in => 'Expressed in',
                          life_stage => 'Life stage',
                          go_term => 'GO term',
                          transgene => 'Transgene'
                             },
                    style = '"aaSorting": [],',
                    key='expression_profiling_graphs');

END;

WRAPPER $field_block title="Anatomy terms" key="anatomy_terms";
  tags2link(fields.anatomy_terms.data, '<br />', 'anatomy terms');
END;



# This is BROKEN. Model issue? Returns a one-element empty data structure.
WRAPPER $field_block title="4D expression movies" key="fourd_expression_movies";
        '<ul>';
  FOREACH mv IN fields.fourd_expression_movies.data.keys;
              '<li>' _ tag2link(mv.value.object) _ ': ' _ mv.value.details _ '<br />';
            external_link(mv.value.movie, mv.value.movie);
              '</li>';
         END;
         '</ul>';
END;



WRAPPER $field_block title="Expression Cluster" key="expression_cluster";
  build_data_table(
    order=['expression_cluster','description'],
    columns={
      expression_cluster => 'Expression clusters',
      description  => 'Description'
    },
    key='expression_cluster');
END;


WRAPPER $field_block title="Microarray, Tiling Array and RNAseq";
     '<a href="' _ site.external_urls.spell_wormbase.base _ '/spell/search/">Perform Clustering Analysis in SPELL</a> (<a href="http://wiki.wormbase.org/index.php/SPELL">documentation</a>)';
     '<br />';
     external_link('spell_wormbase', 'Show Expression Levels of ' _ span_class(object.name.data.label, 'locus', 0, 1) _ ' in All Datasets', object.name.data.label);
END;


WRAPPER $field_block title="Microarray \"topography map\" data" key="microarray_topology_map_position";
    tags2link(fields.microarray_topology_map_position.data);
END;

WRAPPER $field_block title=pluralize("Site", fields.anatomy_function.data.size) _ " of Action" key="anatomy_function";
      build_data_table( order = ['bp_inv', 'assay', 'phenotype', 'reference'],
              columns = { 'bp_inv'   => 'Anatomical Sites',
                          'assay' => 'Assay',
                      'phenotype'   => 'Phenotype',
                      'reference' => 'Reference'},
              key = 'anatomy_function');
END;


    '<div id="fpkm_holder" style="min-height:50px;">
        <div class="loading"><img src="/img/ajax-loader.gif" alt="Loading..." />Loading FPKM expression data...</div>
    </div>';


 %]



[%# PROCESS shared/fields/fpkm_expression_summary_ls.tt2 %]


<script type="text/javascript" >
    setTimeout(function(){  // sorry, need time to load summary fpkm plot first
        WB.openField($jq("#fpkm_holder"), "[% '/rest/field/' _ class _ '/' _ fields.name.data.id _ '/fpkm_expression_summary_ls' %]", {noLoadImg: true});
    }, 1000);
</script>
